---
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import RelatedPostsCard from "@components/RelatedPostsCard.astro";
import FormattedDate from "@components/FormattedDate.astro";
import Share from "@components/Share.svelte";
import MyPicture from "@components/MyPicture.astro";
import placeholder from "@/content/images/placeholder.png";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content, headings } = await post.render();
const cover = post.data.cover ?? placeholder;
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  image={cover.src}
>
  <main>
    <article class="prose mx-auto dark:prose-invert">
      <div class="prose-h1 text-center">
        <h1>{post.data.title}</h1>
      </div>
      <div>
        <MyPicture
          src={cover}
          alt={post.data.coverAlt ?? ""}
          loading="eager"
          fetchpriority="high"
        />
      </div>
      {
        (() => {
          if (headings.length === 0) {
            return;
          }

          return (
            <div class="border-2 border-dotted border-slate-700 px-4 py-2">
              <ul role="list" class="not-prose list-inside list-decimal">
                {headings.map((heading) => {
                  if (heading.depth === 2) {
                    return (
                      <li>
                        <a href={`#${heading.slug}`} class="underline">
                          {heading.text}
                        </a>
                      </li>
                    );
                  }
                })}
              </ul>
            </div>
          );
        })()
      }
      <div>
        <Content />
      </div>
      <div class="prose-a:no-underline">
        {
          post.data.tags.map((tag) => (
            <span class="not-prose mb-2 mr-2 inline-block rounded-full bg-slate-700 px-3 py-1 text-sm text-white hover:bg-slate-600">
              <a href={`/tags/${tag}/1/`}>{tag}</a>
            </span>
          ))
        }
      </div>
      <div class="flex justify-between">
        <small>Publish on <FormattedDate date={post.data.pubDate} /></small>
      </div>
      <Share src={Astro.url} title={post.data.title} />
    </article>
    <div class="mt-4">
      <RelatedPostsCard
        currentCategory={post.data.category[0]}
        currentSlug={post.slug}
      />
    </div>
    <ins
      class="adsbygoogle"
      style="display:block"
      data-ad-format="autorelaxed"
      data-ad-client="ca-pub-3857753364740983"
      data-ad-slot="3205804455"></ins>
    <script is:inline>
      (adsbygoogle = window.adsbygoogle || []).push({});
    </script>
  </main>
  <script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Article",
      image: post.data.cover
        ? new URL(post.data.cover.src, Astro.site).toString()
        : "",
      name: post.data.title,
      description: post.data.description,
      datePublished: post.data.pubDate,
      author: [
        {
          "@type": "Person",
          name: "mopeneko",
          url: "https://nostree.me/npub1tehcg89zc3ynfewfq8xvn69dxxvymtyel27unmj4xzvj3d7y8p7qe783a6",
        },
      ],
    })}
  />
  <script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "BreadcrumbList",
      itemListElement: post.data.tags.map((tag, i) => ({
        "@type": "ListItem",
        position: i + 1,
        name: tag,
        item: `${new URL(`/tags/${tag}/1`, Astro.site)}`
      })),
    })}
  />
</BaseLayout>
